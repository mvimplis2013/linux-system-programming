/* simple_pipe.c
   Simple demonstration of the use of a pipe to communicate between a parent
   and a child process.

   Usage: simple_pipe "string"

   The program creates a pipe, and then calls fork() to create a child process.
   After the fork(), the parent writes the string given on the command line to
   the pipe, and the child uses a loop to read data from the pipe and print it
   on standard output.
*/
#include <sys/wait.h>

#define BUF_SIZE 10

int
main(int argc, char *argv[])
{
  int pfd[2];
  char buf[BUF_SIZE];
  ssize_t numRead;

  if (argc != 2|| strcmp(argv[1], "--help") == 0) {
    sprintf(stderr, "%s string\n", argv[0]);
    exit(EXIT_FAILURE);
  }

  if (pipe(pfd) == -1) {
    sprintf(stderr, "%s\n", "pipe");
    exit(EXIT_FAILURE);
  }
}
    
  
   
